{
    "content": "<html><body><div><section class=\"markdownContent markdownContent-headingEnabled js-task-list-container clearfix position-relative\" id=\"item-e272ff1aafb3889230bc\" itemprop=\"articleBody\"><p class=\"alert alert-warning\"><i class=\"fa fa-clock-o\"/> この記事は最終更新日から1年以上が経過しています。</p>\n<h2>\n<span id=\"概要\" class=\"fragment\"/><a href=\"#%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"/></a>概要</h2>\n\n<p>Flaskアプリケーションで設定ファイルを作成する際に<br/>\n環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。</p>\n\n<p><a href=\"http://flask.pocoo.org/docs/0.11/config/\" rel=\"nofollow noopener\" target=\"_blank\">公式ドキュメント</a>と<a href=\"http://damyanon.net/flask-series-configuration/\" rel=\"nofollow noopener\" target=\"_blank\">海外の方の記事</a>を読んで思ったことをまとめます。<br/>\nこのページの大部分は以上の2ページの和訳から作られています。</p>\n\n<h2>\n<span id=\"flaskにおけるconfig\" class=\"fragment\"/><a href=\"#flask%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bconfig\"><i class=\"fa fa-link\"/></a>Flaskにおけるconfig</h2>\n\n<p>Flaskの設定ファイルで押さえておいたほうが良さそうな部分をまとめます。</p>\n\n<h3>\n<span id=\"基本的な設定\" class=\"fragment\"/><a href=\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"/></a>基本的な設定</h3>\n\n<p><code>Flask</code>インスタンスの<code>config</code>変数に辞書形式で書き込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">基本的な設定</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"ファイルからの設定\" class=\"fragment\"/><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"/></a>ファイルからの設定</h3>\n\n<p>指定したファイルから設定の一覧を読み込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">ファイルからの設定</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"c1\"># ファイルパスを直接指定するパターン</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'config_file.cfg'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ファイルの位置を示す環境変数（絶対パス）を指定するパターン</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_envvar</span><span class=\"p\">(</span><span class=\"s1\">'FLASK_CONFIG_FILE'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>ファイル内では以下のようなINIファイルの形式で設定を記載できます。</p>\n\n\n\n<h3>\n<span id=\"オブジェクトからの設定\" class=\"fragment\"/><a href=\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"/></a>オブジェクトからの設定</h3>\n\n<p>Pythonのオブジェクトとして設定を読み込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">オブジェクトからの設定</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"s1\">'config.BaseConfig'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>ソースコード中では<code>from_json</code>というのも見えた気がしましたが、無視します。<br/>\nファイル内では以下のように、Pythonスクリプトとして設定を構造化できます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">config.py</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"k\">class</span> <span class=\"nc\">BaseConfig</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"n\">TESTING</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DevelopmentConfig</span><span class=\"p\">(</span><span class=\"n\">BaseConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"n\">TESTING</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestingConfig</span><span class=\"p\">(</span><span class=\"n\">BaseConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"n\">TESTING</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"インスタンスフォルダ\" class=\"fragment\"/><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\"><i class=\"fa fa-link\"/></a>インスタンスフォルダ</h3>\n\n<p>アプリケーション開発の際にはソースのバージョン管理が不可欠ですが<br/>\n設定ファイルにはパスワードやAPIのアクセスキーなどの<br/>\nバージョン管理に含めたくない情報が存在します。</p>\n\n<p>Flaskにおいて「インスタンスフォルダ」は<br/>\n特定の設定ファイルをバージョン管理から除外するための機能です。</p>\n\n<p><code>Flask</code>の初期化の際に、絶対パスでインスタンスフォルダを指定できます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">インスタンスフォルダのパス指定</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">instance_path</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/instance/folder'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>この指定がない場合は、デフォルトの<code>instance</code>ディレクトリが<br/>\nインスタンスフォルダとして認識されます。</p>\n\n<p>以下のように記載した場合はインスタンスフォルダから相対パスで<br/>\n設定ファイルを読み込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">相対的なファイルの呼び出し</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">instance_relative_config</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'application.cfg'</span><span class=\"p\">,</span> <span class=\"n\">silent</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>ここでは<code>instance/application.cfg</code>を参照しています。<br/>\n<code>silent=True</code>により、ファイルが見つからなかった場合のエラーを抑制しています。</p>\n\n<p>とはいえ、これだけでバージョン管理から除外できるわけではないので<br/>\n<strong>インスタンスフォルダのパスを</strong><code>.gitignore</code><strong>に記載するのを忘れてはいけません。</strong></p>\n\n<h2>\n<span id=\"ベストプラクティス\" class=\"fragment\"/><a href=\"#%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9\"><i class=\"fa fa-link\"/></a>ベストプラクティス</h2>\n\n<p>公式ページに<a href=\"http://flask.pocoo.org/docs/0.11/config/#configuration-best-practices\" rel=\"nofollow noopener\" target=\"_blank\">ベストプラクティス</a>の項がありますが<br/>\n内容は短く、あまり具体的な記載はされていません。<br/>\n（英語力の問題により、「テストしやすい方が良い」くらいしか読み取れず…）</p>\n\n<p>一方で、<a href=\"http://damyanon.net/flask-series-configuration/\" rel=\"nofollow noopener\" target=\"_blank\">こちら</a>の記事では以下のように記載されています。</p>\n\n<blockquote>\n<p>Good practice is to have a default configuration, which is under source control and to override it with sensitive and specific information kept in instance folders. For the default configuration you could use object-based configuration hierarchy(described in Object-based configuration section) and to manage which configuration object to load via environment variables:</p>\n</blockquote>\n\n<ul>\n<li>デフォルトの設定ファイルはバージョン管理下に置く</li>\n<li>デフォルトの設定はオブジェクトとして書き、環境変数を利用して読み込む</li>\n<li>センシティブな設定はインスタンスフォルダ内の設定で上書きする</li>\n</ul>\n\n<p>最後の項目は<code>development</code>や<code>production</code>などを切り替えるためですね。<br/>\nオブジェクトとして記載することにより、テストもしやすくなるはずです。</p>\n\n<p>具体例としては以下のように記載されています。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<p class=\"code-lang\"><span class=\"bold\">ベストプラクティス（非公式）</span></p>\n<div class=\"highlight\"><pre><span/><span class=\"c1\"># 基本的な設定はバージョン管理下のconfig.pyにオブジェクトとして記載</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"development\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bookshelf.config.DevelopmentConfig\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"testing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bookshelf.config.TestingConfig\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bookshelf.config.DevelopmentConfig\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">configure_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 環境変数を利用して読み込む設定ファイルを決定</span>\n    <span class=\"n\">config_name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'FLASK_CONFIGURATION'</span><span class=\"p\">,</span> <span class=\"s1\">'default'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 設定はオブジェクトとして読み込む</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">config_name</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># センシティブな設定はインスタンスフォルダ内の設定で上書きする</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'config.cfg'</span><span class=\"p\">,</span> <span class=\"n\">silent</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"/><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"/></a>まとめ</h2>\n\n<p>上記の設定をすべてに適用してると大変だと思うので</p>\n\n<ul>\n<li>Hello World!をやる程度なら<code>app.config</code>にベタ書きで指定</li>\n<li>個人で作るような小さめのアプリケーションなら<code>config</code>ファイルで設定</li>\n<li>複数の環境を用意するレベルならベストプラクティスに従う</li>\n</ul>\n\n<p>というくらいの認識を持ちました。</p>\n\n<p>長々書いてしまいましたが、結局は自分自身が納得できるかどうかですよね。<br/>\n構成が汚くても、秘密のファイルが流出しなければとりあえずは問題なし。</p>\n\n<p>アプリケーションの拡張に合わせて、より良いかたちを見つけられればと思います。</p>\n<p class=\"hidden\"/></section></div></body></html>",
    "full-content": "<!DOCTYPE html><html xmlns:og=\"http://ogp.me/ns#\"><head><meta charset=\"UTF-8\" /><title>Flaskにおける設定ファイルのベストプラクティス - Qiita</title><meta content=\"width=device-width,initial-scale=1\" name=\"viewport\" /><meta content=\"\n\n概要\n\nFlaskアプリケーションで設定ファイルを作成する際に\n環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。\n\n公式ドキュメントと海外の方の記事を読んで思ったことをまとめます。\nこのページの大部分は以上の2ページの和訳から作られています。\n\n\nFlaskにおけるconfig\n\nFlaskの設定ファイルで押さえておいたほうが良さそうな部分をまとめます。\n\n\n基本的な設定\n\nFlaskインスタンスのconfig変数に辞書形式で書き込むことがで...\" name=\"description\" /><meta content=\"summary\" name=\"twitter:card\" /><meta content=\"@Qiita\" name=\"twitter:site\" /><meta content=\"Flaskにおける設定ファイルのベストプラクティス - Qiita\" property=\"og:title\" /><meta content=\"article\" property=\"og:type\" /><meta content=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" property=\"og:url\" /><meta content=\"http://cdn.qiita.com/assets/qiita-fb-2887e7b4aad86fd8c25cea84846f2236.png\" property=\"og:image\" /><meta content=\"\n## 概要\n\nFlaskアプリケーションで設定ファイルを作成する際に\n環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。\n\n[公式ドキュメント](http://flask.pocoo.org/docs/0.11...\" property=\"og:description\" /><meta content=\"Qiita\" property=\"og:site_name\" /><meta content=\"564524038\" property=\"fb:admins\" /><link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"https://cdn.qiita.com/assets/favicons/public/production-4ff10c1e1e2b5fcb353ff9cafdd56c70.ico\" /><link rel=\"apple-touch-icon\" type=\"image/png\" href=\"https://cdn.qiita.com/assets/favicons/public/apple-touch-icon-f9a6afad761ec2306e10db2736187c8b.png\" /><link href=\"/opensearch.xml\" rel=\"search\" title=\"Qiita\" type=\"application/opensearchdescription+xml\" /><link rel=\"stylesheet\" media=\"all\" href=\"https://cdn.qiita.com/assets/public-2997b9e1238a0a2766b28a8d4801de23.min.css\" /><meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"+a2sC0mWg5q4+9jUKdNe+nwybSRWxZM+wPSHsmFL8ZUoZhUqbiOwg8oT1/iWIhQJF/bDhZ5IgMp6hisBd0/3sA==\" /><script>\n  window.gtmDataLayer = [\n    {\n      'analytics.dimension5': 'false',\n      'app.env': 'production',\n      'app.layoutVersion': 1,\n      'app.userId': null\n    },\n    { 'gtm.start': new Date().getTime(), event: 'gtm.js' }\n  ];\n</script>\n<script src=\"https://www.googletagmanager.com/gtm.js?id=GTM-TBQWPN&l=gtmDataLayer\" async></script>\n</head><body class=\"without-js\" id=\"\"><noscript><iframe height=\"0\" src=\"//www.googletagmanager.com/ns.html?id=GTM-TBQWPN\" style=\"display:none;visibility:hidden\" width=\"0\"></iframe></noscript><script>\n  document.body.className = document.body.className.replace('without-js', '') + ' with-js';\n  window.Qiita = {\"asset_host\":\"cdn.qiita.com\",\"TLD\":\"com\",\"controller_path\":\"public/items\",\"controller_action\":\"public/items#show\",\"controller\":\"items\",\"action\":\"show\",\"action_path\":\"public/items#show\",\"env\":\"production\",\"flash\":{},\"is_team_page\":false,\"request_parameters\":{\"controller\":\"public/items\",\"action\":\"show\",\"user_id\":\"nanakenashi\",\"type\":\"items\",\"id\":\"e272ff1aafb3889230bc\"},\"root_domain\":\"qiita.com\",\"variant\":null,\"config\":{\"mixpanel\":{\"per_team\":\"c0a2116368b33b44b5029ebd2cc9b094\",\"public\":\"17d24b448ca579c365d2d1057f3a1791\",\"team\":\"b7c0342acba2dbc8742484d98788efb3\"},\"default_locale\":\"ja\",\"locale\":\"ja\"},\"team\":null,\"user\":null,\"GIT_BRANCH\":null,\"DEBUG\":false};\n\n</script>\n<div class=\"headerContainer headerContainer-public\" role=\"navigation\"><script type=\"application/json\" class=\"js-react-on-rails-component\" data-component-name=\"HeaderContainer\" data-dom-id=\"HeaderContainer-react-component-9fa55590-00c6-4b54-8019-4b7303a7e25d\">{\"user\":null,\"team\":null,\"news\":{\"type\":\"Release\",\"content\":\"Qiitaユーザー向けのMastodon、Qiitadon を試験的に公開しました\",\"url\":\"http://blog.qiita.com/post/161193715974/qiitadon?utm_source=qiita\\u0026utm_medium=header_news\"},\"initial_unread_count\":null,\"siteid_image\":\"https://cdn.qiita.com/siteid-reverse.png\",\"is_team_page\":false,\"on_team_setting\":false,\"show_post_menu\":true,\"show_search_menu\":true,\"is_fluid\":false,\"locale\":\"ja\"}</script>\n    <div id=\"HeaderContainer-react-component-9fa55590-00c6-4b54-8019-4b7303a7e25d\"></div>\n    \n</div><div id=\"main\"><script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;\nga('create', 'UA-82435134-1', 'auto', { name: 'userTracker' });\nga('userTracker.send', 'pageview');</script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{  \"@context\": \"http://schema.org\",  \"@type\": \"BreadcrumbList\",  \"itemListElement\": [    {      \"@type\": \"ListItem\",      \"position\": 1,      \"item\": {        \"@id\": \"/\",        \"name\": \"Qiita\"      }    },    {      \"@type\": \"ListItem\",      \"position\": 2,      \"item\": {        \"@id\": \"/items\",        \"name\": \"投稿\"      }    },    {      \"@type\": \"ListItem\",      \"position\": 3,      \"item\": {        \"@id\": \"/tags/Python\",        \"name\": \"Python\"      }    }  ]}</script><article itemscope=\"\" itemtype=\"http://schema.org/Article\"><div class=\"ArticleMainHeader \"><div class=\"container\"></div><div class=\"container\"><div class=\"row s-flex-align-center\"><div class=\"col-sm-9\"><h1 class=\"ArticleMainHeader__title\" itemprop=\"headline\">Flaskにおける設定ファイルのベストプラクティス</h1><ul class=\"TagList\"><li class=\"TagList__item\" data-count=\"12248\"><a class=\"u-link-unstyled TagList__label\" href=\"/tags/Python\"><img alt=\"Python\" class=\"TagList__icon\" src=\"https://s3-ap-northeast-1.amazonaws.com/qiita-tag-image/28fd3d6b220c89e6197fd82c02fd2fcd2bb66d81/medium.jpg?1383884245\" /><span>Python</span></a></li><li class=\"TagList__item\" data-count=\"219\"><a class=\"u-link-unstyled TagList__label\" href=\"/tags/Flask\"><img alt=\"Flask\" class=\"TagList__icon\" src=\"https://s3-ap-northeast-1.amazonaws.com/qiita-tag-image/e6f12bfb293a1c1fef050a7ca845f17dd9c6186d/medium.jpg?1364839185\" /><span>Flask</span></a></li></ul></div><div class=\"col-sm-3\"><div class=\"itemsShowHeaderStock\"><ul class=\"list-unstyled itemsShowHeaderStock_statusList\"><li><div class=\"itemsShowHeaderStock_count stock\"><span class=\"fa fa-thumbs-up\"></span><span class=\"js-likecount\">34</span></div><div class=\"itemsShowHeaderStock_countText\">いいね</div></li><li><div class=\"itemsShowHeaderStock_count\" content=\"0 UserComments\" itemprop=\"commentCount\"><span class=\"fa fa-comment\"></span>0</div><div class=\"itemsShowHeaderStock_countText\">コメント</div></li></ul></div><div class=\"js-likebutton\" data-props=\"{&quot;like_status&quot;:false,&quot;like_count&quot;:34,&quot;uuid&quot;:&quot;e272ff1aafb3889230bc&quot;,&quot;likable_type&quot;:&quot;Article&quot;,&quot;position&quot;:&quot;article-header&quot;}\"></div><ul class=\"list-inline ArticleMainHeader__users\"><li class=\"js-hovercard\" data-hovercard-target-name=\"NobiNobiKen\"><a itemprop=\"url\" href=\"/NobiNobiKen\"><img alt=\"NobiNobiKen\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/137947/profile-images/1484412460\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"murakami-sw\"><a itemprop=\"url\" href=\"/murakami-sw\"><img alt=\"murakami-sw\" class=\"thumb thumb--xs\" src=\"https://avatars1.githubusercontent.com/u/30034458?v=3\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"toshitanian\"><a itemprop=\"url\" href=\"/toshitanian\"><img alt=\"toshitanian\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/55128/profile-images/1473693590\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"TAKAyuki_atkwsk\"><a itemprop=\"url\" href=\"/TAKAyuki_atkwsk\"><img alt=\"TAKAyuki_atkwsk\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/409/profile-images/1473680652\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"ksksk\"><a itemprop=\"url\" href=\"/ksksk\"><img alt=\"ksksk\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/87018/profile-images/1473703943\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"marqs\"><a itemprop=\"url\" href=\"/marqs\"><img alt=\"marqs\" class=\"thumb thumb--xs\" src=\"https://secure.gravatar.com/avatar/ba9edee30c0574ccce4bcba1ce66ea44?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"fullkawa\"><a itemprop=\"url\" href=\"/fullkawa\"><img alt=\"fullkawa\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/11338/profile-images/1473681991\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"msrks\"><a itemprop=\"url\" href=\"/msrks\"><img alt=\"msrks\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/158680/profile-images/1483815015\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"RyujiKawazoe\"><a itemprop=\"url\" href=\"/RyujiKawazoe\"><img alt=\"RyujiKawazoe\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/18331/profile-images/1474958320\" /></a></li><li class=\"js-hovercard\" data-hovercard-target-name=\"tag1216\"><a itemprop=\"url\" href=\"/tag1216\"><img alt=\"tag1216\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/35192/profile-images/1473686636\" /></a></li><li><a href=\"/nanakenashi/items/e272ff1aafb3889230bc/likers\"><span class=\"fa fa-ellipsis-h\"></span></a></li></ul></div></div></div></div><div class=\"ArticleAsideHeader\"><div class=\"container\"><div class=\"u-flex u-space-between\"><div class=\"u-flex u-flex-wrap\"><div class=\"u-flex u-align-center s-pdv-5 u-flex-wrap\"><div class=\"ArticleAsideHeader__author\"><a href=\"/nanakenashi\"><img class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43116/profile-images/1473689415\" alt=\"1473689415\" /></a> <a class=\"u-link-unstyled\" href=\"/nanakenashi\">nanakenashi</a> </div><div class=\"ArticleAsideHeader__date\"><span><time datetime=\"2016-08-31T02:34:36+09:00\" itemprop=\"datePublished\">2016年08月31日</time>に投稿</span></div></div><div class=\"u-flex u-align-center s-pdv-5 mobile-hidden\"></div><div class=\"u-flex u-align-center s-pdv-5 mobile-hidden\"></div></div><div class=\"u-flex u-align-center s-flex-justiry-between s-pdv-5 u-shrink-0\"><div class=\"ArticleAsideHeader__stock\"><div class=\"js-stockbutton\" data-position=\"top\" data-props=\"{&quot;stock_status&quot;:false}\"></div></div><div class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"><span class=\"fa fa-ellipsis-h fa-lg\"></span></a><ul class=\"dropdown-menu dropdown-menu-right\"><li><a href=\"/nanakenashi/items/e272ff1aafb3889230bc.md\"><span class=\"fa fa-fw fa-file-text-o\"></span> Markdownで本文を見る</a></li><li><a data-target=\".js-report-form\" data-toggle=\"modal\" href=\"#\"><span class=\"fa fa-fw fa-flag\"></span> 問題がある投稿を報告する</a></li></ul></div></div></div></div></div><div class=\"container\"><div class=\"row\" id=\"article-body-wrapper\"><div class=\"col-sm-9\"><section class=\"markdownContent markdownContent-headingEnabled js-task-list-container clearfix position-relative\" id=\"item-e272ff1aafb3889230bc\" itemprop=\"articleBody\"><div class=\"alert alert-warning\"><i class=\"fa fa-clock-o\"></i> この記事は最終更新日から1年以上が経過しています。</div>\n<h2>\n<span id=\"概要\" class=\"fragment\"></span><a href=\"#%E6%A6%82%E8%A6%81\"><i class=\"fa fa-link\"></i></a>概要</h2>\n\n<p>Flaskアプリケーションで設定ファイルを作成する際に<br>\n環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。</p>\n\n<p><a href=\"http://flask.pocoo.org/docs/0.11/config/\" rel=\"nofollow noopener\" target=\"_blank\">公式ドキュメント</a>と<a href=\"http://damyanon.net/flask-series-configuration/\" rel=\"nofollow noopener\" target=\"_blank\">海外の方の記事</a>を読んで思ったことをまとめます。<br>\nこのページの大部分は以上の2ページの和訳から作られています。</p>\n\n<h2>\n<span id=\"flaskにおけるconfig\" class=\"fragment\"></span><a href=\"#flask%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bconfig\"><i class=\"fa fa-link\"></i></a>Flaskにおけるconfig</h2>\n\n<p>Flaskの設定ファイルで押さえておいたほうが良さそうな部分をまとめます。</p>\n\n<h3>\n<span id=\"基本的な設定\" class=\"fragment\"></span><a href=\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>基本的な設定</h3>\n\n<p><code>Flask</code>インスタンスの<code>config</code>変数に辞書形式で書き込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">基本的な設定</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"ファイルからの設定\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>ファイルからの設定</h3>\n\n<p>指定したファイルから設定の一覧を読み込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">ファイルからの設定</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># ファイルパスを直接指定するパターン</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'config_file.cfg'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ファイルの位置を示す環境変数（絶対パス）を指定するパターン</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_envvar</span><span class=\"p\">(</span><span class=\"s1\">'FLASK_CONFIG_FILE'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>ファイル内では以下のようなINIファイルの形式で設定を記載できます。</p>\n\n<div class=\"code-frame\" data-lang=\"ini\">\n<div class=\"code-lang\"><span class=\"bold\">config_file.cfg</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"na\">TESTING</span><span class=\"o\">=</span><span class=\"s\">False</span>\n<span class=\"na\">DEBUG</span><span class=\"o\">=</span><span class=\"s\">True</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"オブジェクトからの設定\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>オブジェクトからの設定</h3>\n\n<p>Pythonのオブジェクトとして設定を読み込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">オブジェクトからの設定</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"s1\">'config.BaseConfig'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>ソースコード中では<code>from_json</code>というのも見えた気がしましたが、無視します。<br>\nファイル内では以下のように、Pythonスクリプトとして設定を構造化できます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">config.py</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">BaseConfig</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"n\">TESTING</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DevelopmentConfig</span><span class=\"p\">(</span><span class=\"n\">BaseConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n    <span class=\"n\">TESTING</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestingConfig</span><span class=\"p\">(</span><span class=\"n\">BaseConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"n\">TESTING</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n</pre></div>\n</div>\n\n<h3>\n<span id=\"インスタンスフォルダ\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\"><i class=\"fa fa-link\"></i></a>インスタンスフォルダ</h3>\n\n<p>アプリケーション開発の際にはソースのバージョン管理が不可欠ですが<br>\n設定ファイルにはパスワードやAPIのアクセスキーなどの<br>\nバージョン管理に含めたくない情報が存在します。</p>\n\n<p>Flaskにおいて「インスタンスフォルダ」は<br>\n特定の設定ファイルをバージョン管理から除外するための機能です。</p>\n\n<p><code>Flask</code>の初期化の際に、絶対パスでインスタンスフォルダを指定できます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">インスタンスフォルダのパス指定</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">instance_path</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/instance/folder'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>この指定がない場合は、デフォルトの<code>instance</code>ディレクトリが<br>\nインスタンスフォルダとして認識されます。</p>\n\n<p>以下のように記載した場合はインスタンスフォルダから相対パスで<br>\n設定ファイルを読み込むことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">相対的なファイルの呼び出し</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">instance_relative_config</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'application.cfg'</span><span class=\"p\">,</span> <span class=\"n\">silent</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>ここでは<code>instance/application.cfg</code>を参照しています。<br>\n<code>silent=True</code>により、ファイルが見つからなかった場合のエラーを抑制しています。</p>\n\n<p>とはいえ、これだけでバージョン管理から除外できるわけではないので<br>\n<strong>インスタンスフォルダのパスを</strong><code>.gitignore</code><strong>に記載するのを忘れてはいけません。</strong></p>\n\n<h2>\n<span id=\"ベストプラクティス\" class=\"fragment\"></span><a href=\"#%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9\"><i class=\"fa fa-link\"></i></a>ベストプラクティス</h2>\n\n<p>公式ページに<a href=\"http://flask.pocoo.org/docs/0.11/config/#configuration-best-practices\" rel=\"nofollow noopener\" target=\"_blank\">ベストプラクティス</a>の項がありますが<br>\n内容は短く、あまり具体的な記載はされていません。<br>\n（英語力の問題により、「テストしやすい方が良い」くらいしか読み取れず…）</p>\n\n<p>一方で、<a href=\"http://damyanon.net/flask-series-configuration/\" rel=\"nofollow noopener\" target=\"_blank\">こちら</a>の記事では以下のように記載されています。</p>\n\n<blockquote>\n<p>Good practice is to have a default configuration, which is under source control and to override it with sensitive and specific information kept in instance folders. For the default configuration you could use object-based configuration hierarchy(described in Object-based configuration section) and to manage which configuration object to load via environment variables:</p>\n</blockquote>\n\n<ul>\n<li>デフォルトの設定ファイルはバージョン管理下に置く</li>\n<li>デフォルトの設定はオブジェクトとして書き、環境変数を利用して読み込む</li>\n<li>センシティブな設定はインスタンスフォルダ内の設定で上書きする</li>\n</ul>\n\n<p>最後の項目は<code>development</code>や<code>production</code>などを切り替えるためですね。<br>\nオブジェクトとして記載することにより、テストもしやすくなるはずです。</p>\n\n<p>具体例としては以下のように記載されています。</p>\n\n<div class=\"code-frame\" data-lang=\"python\">\n<div class=\"code-lang\"><span class=\"bold\">ベストプラクティス（非公式）</span></div>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># 基本的な設定はバージョン管理下のconfig.pyにオブジェクトとして記載</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"development\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bookshelf.config.DevelopmentConfig\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"testing\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bookshelf.config.TestingConfig\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bookshelf.config.DevelopmentConfig\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">configure_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 環境変数を利用して読み込む設定ファイルを決定</span>\n    <span class=\"n\">config_name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'FLASK_CONFIGURATION'</span><span class=\"p\">,</span> <span class=\"s1\">'default'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 設定はオブジェクトとして読み込む</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">config_name</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># センシティブな設定はインスタンスフォルダ内の設定で上書きする</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'config.cfg'</span><span class=\"p\">,</span> <span class=\"n\">silent</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>上記の設定をすべてに適用してると大変だと思うので</p>\n\n<ul>\n<li>Hello World!をやる程度なら<code>app.config</code>にベタ書きで指定</li>\n<li>個人で作るような小さめのアプリケーションなら<code>config</code>ファイルで設定</li>\n<li>複数の環境を用意するレベルならベストプラクティスに従う</li>\n</ul>\n\n<p>というくらいの認識を持ちました。</p>\n\n<p>長々書いてしまいましたが、結局は自分自身が納得できるかどうかですよね。<br>\n構成が汚くても、秘密のファイルが流出しなければとりあえずは問題なし。</p>\n\n<p>アプリケーションの拡張に合わせて、より良いかたちを見つけられればと思います。</p>\n<div class=\"hidden\"><form class=\"js-task-list-update\" action=\"/nanakenashi/items/e272ff1aafb3889230bc\" accept-charset=\"UTF-8\" method=\"post\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" /><input type=\"hidden\" name=\"_method\" value=\"patch\" /><input type=\"hidden\" name=\"authenticity_token\" value=\"lvczQFIwg5/mpKV31Ig+KRrPZP8Xcl88+nJqgLa/WmlHPIphdYWwhpRMqltreXTacQvKXt//TMhAAMYzoLtcTA==\" /><input type=\"hidden\" name=\"updated_at_confirmation_in_unixtime\" id=\"updated_at_confirmation_in_unixtime\" value=\"1472578476\" class=\"js-task-list-updated-at\" /><textarea name=\"raw_body\" id=\"raw_body\" class=\"js-task-list-field\">\n\n## 概要\n\nFlaskアプリケーションで設定ファイルを作成する際に\n環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。\n\n[公式ドキュメント](http://flask.pocoo.org/docs/0.11/config/)と[海外の方の記事](http://damyanon.net/flask-series-configuration/)を読んで思ったことをまとめます。\nこのページの大部分は以上の2ページの和訳から作られています。\n\n## Flaskにおけるconfig\n\nFlaskの設定ファイルで押さえておいたほうが良さそうな部分をまとめます。\n\n### 基本的な設定\n\n`Flask`インスタンスの`config`変数に辞書形式で書き込むことができます。\n\n```python:基本的な設定\napp.config[&#39;DEBUG&#39;] = True\n```\n\n### ファイルからの設定\n\n指定したファイルから設定の一覧を読み込むことができます。\n\n```python:ファイルからの設定\n# ファイルパスを直接指定するパターン\napp.config.from_pyfile(&#39;config_file.cfg&#39;)\n\n# ファイルの位置を示す環境変数（絶対パス）を指定するパターン\napp.config.from_envvar(&#39;FLASK_CONFIG_FILE&#39;)\n```\n\nファイル内では以下のようなINIファイルの形式で設定を記載できます。\n\n```config_file.cfg\nTESTING=False\nDEBUG=True\n```\n\n### オブジェクトからの設定\n\nPythonのオブジェクトとして設定を読み込むことができます。\n\n```python:オブジェクトからの設定\napp.config.from_object(&#39;config.BaseConfig&#39;)\n```\n\nソースコード中では`from_json`というのも見えた気がしましたが、無視します。\nファイル内では以下のように、Pythonスクリプトとして設定を構造化できます。\n\n```python:config.py\nclass BaseConfig(object):\n    DEBUG = False\n    TESTING = False\n\n\nclass DevelopmentConfig(BaseConfig):\n    DEBUG = True\n    TESTING = True\n\n\nclass TestingConfig(BaseConfig):\n    DEBUG = False\n    TESTING = True\n```\n\n### インスタンスフォルダ\n\nアプリケーション開発の際にはソースのバージョン管理が不可欠ですが\n設定ファイルにはパスワードやAPIのアクセスキーなどの\nバージョン管理に含めたくない情報が存在します。\n\nFlaskにおいて「インスタンスフォルダ」は\n特定の設定ファイルをバージョン管理から除外するための機能です。\n\n`Flask`の初期化の際に、絶対パスでインスタンスフォルダを指定できます。\n\n```python:インスタンスフォルダのパス指定\napp = Flask(__name__, instance_path=&#39;/path/to/instance/folder&#39;)\n```\n\nこの指定がない場合は、デフォルトの`instance`ディレクトリが\nインスタンスフォルダとして認識されます。\n\n以下のように記載した場合はインスタンスフォルダから相対パスで\n設定ファイルを読み込むことができます。\n\n```python:相対的なファイルの呼び出し\napp = Flask(__name__, instance_relative_config=True)\napp.config.from_pyfile(&#39;application.cfg&#39;, silent=True)\n```\n\nここでは`instance/application.cfg`を参照しています。\n`silent=True`により、ファイルが見つからなかった場合のエラーを抑制しています。\n\nとはいえ、これだけでバージョン管理から除外できるわけではないので\n**インスタンスフォルダのパスを**`.gitignore`**に記載するのを忘れてはいけません。**\n\n## ベストプラクティス\n\n公式ページに[ベストプラクティス](http://flask.pocoo.org/docs/0.11/config/#configuration-best-practices)の項がありますが\n内容は短く、あまり具体的な記載はされていません。\n（英語力の問題により、「テストしやすい方が良い」くらいしか読み取れず…）\n\n一方で、[こちら](http://damyanon.net/flask-series-configuration/)の記事では以下のように記載されています。\n\n&gt; Good practice is to have a default configuration, which is under source control and to override it with sensitive and specific information kept in instance folders. For the default configuration you could use object-based configuration hierarchy(described in Object-based configuration section) and to manage which configuration object to load via environment variables:\n\n* デフォルトの設定ファイルはバージョン管理下に置く\n* デフォルトの設定はオブジェクトとして書き、環境変数を利用して読み込む\n* センシティブな設定はインスタンスフォルダ内の設定で上書きする\n\n最後の項目は`development`や`production`などを切り替えるためですね。\nオブジェクトとして記載することにより、テストもしやすくなるはずです。\n\n具体例としては以下のように記載されています。\n\n```python:ベストプラクティス（非公式）\n# 基本的な設定はバージョン管理下のconfig.pyにオブジェクトとして記載\nconfig = {\n    &quot;development&quot;: &quot;bookshelf.config.DevelopmentConfig&quot;,\n    &quot;testing&quot;: &quot;bookshelf.config.TestingConfig&quot;,\n    &quot;default&quot;: &quot;bookshelf.config.DevelopmentConfig&quot;\n}\n\ndef configure_app(app):\n    # 環境変数を利用して読み込む設定ファイルを決定\n    config_name = os.getenv(&#39;FLASK_CONFIGURATION&#39;, &#39;default&#39;)\n    \n    # 設定はオブジェクトとして読み込む\n    app.config.from_object(config[config_name])\n    \n    # センシティブな設定はインスタンスフォルダ内の設定で上書きする\n    app.config.from_pyfile(&#39;config.cfg&#39;, silent=True)\n```\n\n## まとめ\n\n上記の設定をすべてに適用してると大変だと思うので\n\n* Hello World!をやる程度なら`app.config`にベタ書きで指定\n* 個人で作るような小さめのアプリケーションなら`config`ファイルで設定\n* 複数の環境を用意するレベルならベストプラクティスに従う\n\nというくらいの認識を持ちました。\n\n長々書いてしまいましたが、結局は自分自身が納得できるかどうかですよね。\n構成が汚くても、秘密のファイルが流出しなければとりあえずは問題なし。\n\nアプリケーションの拡張に合わせて、より良いかたちを見つけられればと思います。\n</textarea><input type=\"submit\" name=\"commit\" value=\"Save changes\" data-disable-with=\"Save changes\" /></form></div></section></div><div class=\"col-sm-3\"><div class=\"socialButtons\"><div class=\"socialButtons_twitter\"><a class=\"twitter-share-button\" data-text=\"Flaskにおける設定ファイルのベストプラクティス on @Qiita\" data-url=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" href=\"https://twitter.com/share\">ツイート</a></div><div class=\"socialButtons_hatebu\"><a class=\"hatena-bookmark-button\" data-hatena-bookmark-layout=\"simple-balloon\" data-hatena-bookmark-title=\"Flaskにおける設定ファイルのベストプラクティス\" href=\"http://b.hatena.ne.jp/entry/http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" title=\"はてブに追加\"><img alt=\"はてブに追加\" height=\"20\" src=\"https://b.st-hatena.com/images/entry-button/button-only@2x.png\" style=\"border: none;\" width=\"20\" /></a><script async=\"async\" charset=\"utf-8\" src=\"https://b.st-hatena.com/js/bookmark_button.js\" type=\"text/javascript\"></script></div><div class=\"socialButtons_googlePlus\"><div class=\"g-plusone\" data-href=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" data-size=\"medium\"></div></div><div class=\"socialButtons_facebook\"><div class=\"fb-like\" data-action=\"like\" data-href=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" data-layout=\"button_count\" data-share=\"false\" data-show-faces=\"false\"></div></div><div class=\"socialButtons_pocket\"><a class=\"pocket-btn\" data-lang=\"en\" data-pocket-count=\"horizontal\" data-pocket-label=\"pocket\"></a></div></div><section class=\"itemsShowAuthorInfo\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><a href=\"/nanakenashi\"><img alt=\"\" class=\"itemsShowAuthorInfo_userIcon\" itemprop=\"image\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43116/profile-images/1473689415\" /></a><div class=\"itemsShowAuthorInfo_profileStats\"><strong class=\"itemsShowAuthorInfo_userName\" itemprop=\"name\"><a itemprop=\"url\" href=\"/nanakenashi\">nanakenashi</a></strong><div class=\"itemsShowAuthorInfo_contribution\"><span class=\"itemsShowAuthorInfo_count\">194</span><span class=\"itemsShowAuthorInfo_unit\">Contribution</span></div><script type=\"application/json\" id=\"js-react-on-rails-context\">{}</script>\n<script type=\"application/json\" class=\"js-react-on-rails-component\" data-component-name=\"UserFollowButton\" data-dom-id=\"UserFollowButton-react-component-c8ed80ff-7173-4430-a413-fe32e2ee16f9\">{\"initial_followed_by\":false,\"position\":\"author-info\",\"size\":\"btn-xs\",\"url_name\":\"nanakenashi\"}</script>\n    <div id=\"UserFollowButton-react-component-c8ed80ff-7173-4430-a413-fe32e2ee16f9\"></div>\n    \n</div><section class=\"itemsShowAuthorPopularItems\"><h5 class=\"itemsShowAuthorPopularItems_sectionTitle\">人気の投稿</h5><ul class=\"itemsShowAuthorPopularItems_posts list-unstyled\"><li itemscope=\"\" itemtype=\"http://schema.org/Article\"> <a itemprop=\"url\" href=\"/nanakenashi/items/e272ff1aafb3889230bc\">Flaskにおける設定ファイルのベストプラクティス</a></li><li itemscope=\"\" itemtype=\"http://schema.org/Article\"> <a itemprop=\"url\" href=\"/nanakenashi/items/6497caf1c56c36f47be9\">Flask-SocketIOでWebSocketアプリケーション</a></li><li itemscope=\"\" itemtype=\"http://schema.org/Article\"> <a itemprop=\"url\" href=\"/nanakenashi/items/2f932bb84f05e84df954\">DockerとErrbotでお手軽Slackbot</a></li><li itemscope=\"\" itemtype=\"http://schema.org/Article\"> <a itemprop=\"url\" href=\"/nanakenashi/items/cbe8e8ef878121638514\">Dockerを使って低コストでFlaskの開発環境を構築</a></li><li itemscope=\"\" itemtype=\"http://schema.org/Article\"> <a itemprop=\"url\" href=\"/nanakenashi/items/5df002feea2e4a0a867b\">AWSにおけるDockerコンテナの監視</a></li></ul></section><section class=\"itemsShowAuthorInfo_organization\"><h5 class=\"itemsShowAuthorInfo_organizationTitle\">Organization</h5><span itemprop=\"memberOf\" itemscope=\"\" itemtype=\"http://schema.org/Organization\"><a itemprop=\"url\" href=\"/organizations/lifull\"><img alt=\"株式会社LIFULL\" class=\"itemsShowAuthorInfo_organizationLogo\" itemprop=\"image\" src=\"https://s3-ap-northeast-1.amazonaws.com/qiita-organization-image/a52c267f8575e8dfed318fd49844767d843b97bc/original.jpg?1490757256\" /></a></span></section></section><div class=\"scroll-chaser\"></div><script type=\"application/json\" class=\"js-react-on-rails-component\" data-component-name=\"Toc\" data-dom-id=\"Toc-react-component-8a1c7a13-51f2-4b18-bc49-3e0a94c89a65\">{\"body\":\"\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E6%A6%82%E8%A6%81\\\"\\u003e概要\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#flask%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bconfig\\\"\\u003eFlaskにおけるconfig\\u003c/a\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E8%A8%AD%E5%AE%9A\\\"\\u003e基本的な設定\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A\\\"\\u003eファイルからの設定\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A\\\"\\u003eオブジェクトからの設定\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80\\\"\\u003eインスタンスフォルダ\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9\\\"\\u003eベストプラクティス\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003ca href=\\\"#%E3%81%BE%E3%81%A8%E3%82%81\\\"\\u003eまとめ\\u003c/a\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\",\"wrapper\":\"#article-body-wrapper\"}</script>\n    <div id=\"Toc-react-component-8a1c7a13-51f2-4b18-bc49-3e0a94c89a65\"></div>\n    \n</div></div><div class=\"row\"><div class=\"col-sm-9\"><div class=\"ArticleFooter__menu\"><div class=\"s-flex-align-center\"><div class=\"js-likebutton\" data-props=\"{&quot;like_status&quot;:false,&quot;like_count&quot;:34,&quot;show_count&quot;:true,&quot;uuid&quot;:&quot;e272ff1aafb3889230bc&quot;,&quot;likable_type&quot;:&quot;Article&quot;,&quot;position&quot;:&quot;article-footer&quot;}\"></div><div class=\"ArticleFooter__userList\"><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"SaitoTsutomu\"><a itemprop=\"url\" href=\"/SaitoTsutomu\"><img alt=\"SaitoTsutomu\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/13955/profile-images/1491373112\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"keitaoouchi\"><a itemprop=\"url\" href=\"/keitaoouchi\"><img alt=\"keitaoouchi\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/5806/profile-images/1481159642\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"sh0\"><a itemprop=\"url\" href=\"/sh0\"><img alt=\"sh0\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/122706/profile-images/1473715321\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"orange634\"><a itemprop=\"url\" href=\"/orange634\"><img alt=\"orange634\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/83495/profile-images/1488906054\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"quenhulu\"><a itemprop=\"url\" href=\"/quenhulu\"><img alt=\"quenhulu\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/14708/profile-images/1473683459\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"1-AizawaSatoshi\"><a itemprop=\"url\" href=\"/1-AizawaSatoshi\"><img alt=\"1-AizawaSatoshi\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/97271/profile-images/1473707150\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"divider_kuro\"><a itemprop=\"url\" href=\"/divider_kuro\"><img alt=\"divider_kuro\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/66382/profile-images/1473697190\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"hiracchi\"><a itemprop=\"url\" href=\"/hiracchi\"><img alt=\"hiracchi\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/2696/profile-images/1473681942\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"yakawa\"><a itemprop=\"url\" href=\"/yakawa\"><img alt=\"yakawa\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/64468/profile-images/1473696589\" /></a></div></div><div class=\"ArticleFooter__user\"><div class=\"js-hovercard\" data-hovercard-target-name=\"haburibe\"><a itemprop=\"url\" href=\"/haburibe\"><img alt=\"haburibe\" class=\"thumb thumb--xs\" src=\"https://qiita-image-store.s3.amazonaws.com/0/2688/profile-images/1473681937\" /></a></div></div><div class=\"ArticleFooter__user\"><a href=\"/nanakenashi/items/e272ff1aafb3889230bc/likers\"><span class=\"fa fa-ellipsis-h\"></span></a></div></div></div><div class=\"u-flex u-align-center\"><div class=\"ArticleFooter__stock\"><div class=\"js-stockbutton\" data-position=\"footer_menu\" data-props=\"{&quot;stock_status&quot;:false}\"></div></div><div class=\"ArticleFooter__editRequest\"><a class=\"u-link-no-underline\" data-toggle=\"tooltip\" title=\"投稿者に記事をより良くするための提案ができます 💪\" href=\"/drafts/e272ff1aafb3889230bc/edit\"><span class=\"fa fa-send-o fa-lg\"></span> <span>編集リクエスト</span></a></div><div class=\"dropdown ArticleFooter__dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"><span class=\"fa fa-ellipsis-h\"></span></a><ul class=\"dropdown-menu dropdown-menu-right\"><li><a href=\"/nanakenashi/items/e272ff1aafb3889230bc.md\"><span class=\"fa fa-fw fa-file-text-o\"></span> Markdownで本文を見る</a></li><li><a data-target=\".js-report-form\" data-toggle=\"modal\" href=\"#\"><i class=\"fa fa-fw fa-flag\"></i> 問題がある投稿を報告する</a></li></ul></div></div></div><div class=\"itemsShowBody_articleColumnFooter\"><div class=\"socialButtons\"><div class=\"socialButtons_twitter\"><a class=\"twitter-share-button\" data-text=\"Flaskにおける設定ファイルのベストプラクティス on @Qiita\" data-url=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" href=\"https://twitter.com/share\">ツイート</a></div><div class=\"socialButtons_hatebu\"><a class=\"hatena-bookmark-button\" data-hatena-bookmark-layout=\"simple-balloon\" data-hatena-bookmark-title=\"Flaskにおける設定ファイルのベストプラクティス\" href=\"http://b.hatena.ne.jp/entry/http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" title=\"はてブに追加\"><img alt=\"はてブに追加\" height=\"20\" src=\"https://b.st-hatena.com/images/entry-button/button-only@2x.png\" style=\"border: none;\" width=\"20\" /></a><script async=\"async\" charset=\"utf-8\" src=\"https://b.st-hatena.com/js/bookmark_button.js\" type=\"text/javascript\"></script></div><div class=\"socialButtons_googlePlus\"><div class=\"g-plusone\" data-href=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" data-size=\"medium\"></div></div><div class=\"socialButtons_facebook\"><div class=\"fb-like\" data-action=\"like\" data-href=\"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\" data-layout=\"button_count\" data-share=\"false\" data-show-faces=\"false\"></div></div><div class=\"socialButtons_pocket\"><a class=\"pocket-btn\" data-lang=\"en\" data-pocket-count=\"horizontal\" data-pocket-label=\"pocket\"></a></div></div></div><div class=\"itemsShowComment_wrapper\" id=\"comments\"><script type=\"application/json\" class=\"js-react-on-rails-component\" data-component-name=\"PublicCommentListContainer\" data-dom-id=\"PublicCommentListContainer-react-component-05a2bb85-43d1-4855-9a2d-b32718d58aa0\">{\"currentUser\":null,\"initialComments\":[],\"monthly_public_image_uploadable_size_limit\":null,\"total_uploaded_public_image_size_in_current_month\":null,\"item\":{\"id\":419196,\"uuid\":\"e272ff1aafb3889230bc\",\"suspended\":false,\"secret\":false},\"owner\":{\"url_name\":\"nanakenashi\"},\"is_team\":false,\"is_project\":false,\"logged_in\":false,\"polling\":false,\"mention_candidates\":[{\"id\":43116,\"url_name\":\"nanakenashi\",\"profile_image_url\":\"https://qiita-image-store.s3.amazonaws.com/0/43116/profile-images/1473689415\"}]}</script>\n    <div id=\"PublicCommentListContainer-react-component-05a2bb85-43d1-4855-9a2d-b32718d58aa0\"></div>\n    \n</div></div></div></div></article><div class=\"js-report-form modal fade reportForm\"><div class=\"modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button name=\"button\" type=\"submit\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">問題がある投稿を報告する</h4></div><div class=\"modal-body\"><form class=\"new_public_issue_report\" id=\"new_public_issue_report\" action=\"/api/internal/issue_reports\" accept-charset=\"UTF-8\" method=\"post\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" /><input type=\"hidden\" name=\"authenticity_token\" value=\"ginKIQr+2qswV4ZxAj37eVtinDPInJ+G/uP8AuANnH5T4nMALUvpskK/iV29zLGKMKYykgARjHJEkVCx9gmaWw==\" /><input type=\"hidden\" value=\"PublicDomainArticle\" name=\"public_issue_report[target_type]\" id=\"public_issue_report_target_type\" /><input type=\"hidden\" value=\"419196\" name=\"public_issue_report[target_id]\" id=\"public_issue_report_target_id\" /><p>この投稿にどのような問題がありますか？</p><br /><div class=\"form-group\"><ul class=\"list-unstyled\"><li><label><input required=\"required\" type=\"radio\" value=\"spam\" name=\"public_issue_report[reason]\" id=\"public_issue_report_reason_spam\" /> スパムです </label></li><li><label><input required=\"required\" type=\"radio\" value=\"harassment\" name=\"public_issue_report[reason]\" id=\"public_issue_report_reason_harassment\" /> 攻撃的または迷惑な内容を含んでいます </label></li><li><label><input required=\"required\" type=\"radio\" value=\"inappropriate_content\" name=\"public_issue_report[reason]\" id=\"public_issue_report_reason_inappropriate_content\" /> 不適切な内容を含んでいます </label></li></ul></div><div class=\"reportForm_submitButtonContainer\"><button name=\"button\" type=\"submit\" class=\"btn btn-primary reportForm_submitButton\"><i class=\"fa fa-send\"></i> 送信</button></div></form></div></div></div></div><script id=\"js-item\" type=\"application/json\">{ \"url\": \"http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc\", \"id\": 419196, \"uuid\": \"e272ff1aafb3889230bc\" }</script><script class=\"js-user\" type=\"application/json\">{&quot;id&quot;:43116,&quot;url_name&quot;:&quot;nanakenashi&quot;,&quot;profile_image_url&quot;:&quot;https://qiita-image-store.s3.amazonaws.com/0/43116/profile-images/1473689415&quot;}</script><script language=\"JavaScript\" src=\"//cdn.bigmining.com/private/js/qiita_bigmining.js\" type=\"text/javascript\"></script></div><footer class=\"footer\"><div class=\"footer_inner\"><div class=\"footer_container\"><ul class=\"footer_links-left\"><li class=\"footer_link\"><a class=\"footer_copyright\" href=\"http://increments.co.jp\">© 2011-2017 Increments Inc.</a></li><li class=\"footer_link\"><a href=\"http://qiita.com/terms\">利用規約</a></li><li class=\"footer_link\"><a href=\"http://qiita.com/privacy\">プライバシー</a></li><li class=\"footer_link\"><a href=\"http://help.qiita.com\">ヘルプ</a></li><li class=\"footer_link\"><a href=\"https://increments.zendesk.com/anonymous_requests/new\">お問い合わせ</a></li></ul><ul class=\"footer_links-right\"><li class=\"footer_link\"><a href=\"http://qiita.com/about\">Qiitaとは</a></li><li class=\"footer_link\"><a href=\"/users\">ユーザー</a></li><li class=\"footer_link\"><a href=\"/tags\">タグ</a></li><li class=\"footer_link\"><a href=\"http://blog.qiita.com\">ブログ</a></li><li class=\"footer_link\"><a href=\"http://qiita.com/api/v2/docs\">API</a></li><li class=\"footer_link\"><a href=\"https://teams.qiita.com/\">Team</a></li><li class=\"footer_link\"><a href=\"http://kobito.qiita.com\">Kobito</a></li><li class=\"footer_link\"><a class=\"js-public-form-feedback-link\" data-target=\".js-feedback-form\" data-toggle=\"modal\" href=\"\"><i class=\"fa fa-heart\"></i> ご意見 <i class=\"fa fa-caret-down\"></i></a></li></ul></div></div></footer><div class=\"js-feedback-form modal fade feedbackForm\"><div class=\"modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button name=\"button\" type=\"submit\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">ご意見</h4></div><div class=\"modal-body\"><form class=\"js-feedback-form-form\" action=\"/feedbacks\" accept-charset=\"UTF-8\" method=\"post\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" /><input type=\"hidden\" name=\"authenticity_token\" value=\"x4h5rSfRg55XzPUz1FkWPFBmOlIxFIh73EQnAiVITB4WQ8CMAGSwhyUk+h9rqFzPO6KU8/mZm49mNouxM0xKOw==\" /><input type=\"hidden\" name=\"redirect_path\" id=\"redirect_path\" value=\"/nanakenashi/items/e272ff1aafb3889230bc\" /><div class=\"form-group\"><textarea name=\"feedback[message]\" id=\"feedback_message\" class=\"form-control js-feedback-form-text-area\" placeholder=\"Qiitaについてのご意見をお聞かせください。\" required=\"required\" rows=\"5\">\n</textarea></div><div class=\"feedbackForm_submitButtonContainer\"><button name=\"button\" type=\"submit\" class=\"btn btn-primary feedbackForm_submitButton\"><i class=\"fa fa-send\"></i> 送信</button><p class=\"feedbackForm_note\">いただいたご意見への返信は行っておりません。<br />返信の必要な内容については、<a href=\"https://increments.zendesk.com/anonymous_requests/new\">こちら</a> からお問い合わせください。</p></div><div style=\"position:fixed;top:-99999px;opacity:0.0001;\"><input name=\"feedback[name]\" type=\"text\" /></div></form></div></div></div></div><script>// if (window.mixpanel instanceof Element) {\n//   window.mixpanel = [];\n// }\n// (function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(\".\");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;\"undefined\"!==typeof d?c=b[d]=[]:d=\"mixpanel\";c.people=c.people||[];c.toString=function(b){var a=\"mixpanel\";\"mixpanel\"!==d&&(a+=\".\"+d);b||(a+=\" (stub)\");return a};c.people.toString=function(){return c.toString(1)+\".people (stub)\"};i=\"disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user\".split(\" \");\n// for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement(\"script\");a.type=\"text/javascript\";a.async=!0;a.src=\"//cdn.mxpnl.com/libs/mixpanel-2.2.min.js\";e=f.getElementsByTagName(\"script\")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);</script><script src=\"https://cdn.qiita.com/assets/public-5c04804ac638c312c173116126b65a77.min.js\"></script></body></html>",
    "markdown-content": " この記事は最終更新日から1年以上が経過しています。\n\n[](#%E6%A6%82%E8%A6%81)概要\n---------------------------\n\nFlaskアプリケーションで設定ファイルを作成する際に\\\n 環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。\n\n[公式ドキュメント](http://flask.pocoo.org/docs/0.11/config/)と[海外の方の記事](http://damyanon.net/flask-series-configuration/)を読んで思ったことをまとめます。\\\n このページの大部分は以上の2ページの和訳から作られています。\n\n[](#flask%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bconfig)Flaskにおけるconfig\n-----------------------------------------------------------------------\n\nFlaskの設定ファイルで押さえておいたほうが良さそうな部分をまとめます。\n\n### [](#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E8%A8%AD%E5%AE%9A)基本的な設定\n\n`Flask`インスタンスの`config`変数に辞書形式で書き込むことができます。\n\n基本的な設定\n\n    app.config['DEBUG'] = True\n\n### [](#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A)ファイルからの設定\n\n指定したファイルから設定の一覧を読み込むことができます。\n\nファイルからの設定\n\n    # ファイルパスを直接指定するパターン\n    app.config.from_pyfile('config_file.cfg')\n\n    # ファイルの位置を示す環境変数（絶対パス）を指定するパターン\n    app.config.from_envvar('FLASK_CONFIG_FILE')\n\nファイル内では以下のようなINIファイルの形式で設定を記載できます。\n\n### [](#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8B%E3%82%89%E3%81%AE%E8%A8%AD%E5%AE%9A)オブジェクトからの設定\n\nPythonのオブジェクトとして設定を読み込むことができます。\n\nオブジェクトからの設定\n\n    app.config.from_object('config.BaseConfig')\n\nソースコード中では`from_json`というのも見えた気がしましたが、無視します。\\\n ファイル内では以下のように、Pythonスクリプトとして設定を構造化できます。\n\nconfig.py\n\n    class BaseConfig(object):\n        DEBUG = False\n        TESTING = False\n\n\n    class DevelopmentConfig(BaseConfig):\n        DEBUG = True\n        TESTING = True\n\n\n    class TestingConfig(BaseConfig):\n        DEBUG = False\n        TESTING = True\n\n### [](#%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80)インスタンスフォルダ\n\nアプリケーション開発の際にはソースのバージョン管理が不可欠ですが\\\n 設定ファイルにはパスワードやAPIのアクセスキーなどの\\\n バージョン管理に含めたくない情報が存在します。\n\nFlaskにおいて「インスタンスフォルダ」は\\\n 特定の設定ファイルをバージョン管理から除外するための機能です。\n\n`Flask`の初期化の際に、絶対パスでインスタンスフォルダを指定できます。\n\nインスタンスフォルダのパス指定\n\n    app = Flask(__name__, instance_path='/path/to/instance/folder')\n\nこの指定がない場合は、デフォルトの`instance`ディレクトリが\\\n インスタンスフォルダとして認識されます。\n\n以下のように記載した場合はインスタンスフォルダから相対パスで\\\n 設定ファイルを読み込むことができます。\n\n相対的なファイルの呼び出し\n\n    app = Flask(__name__, instance_relative_config=True)\n    app.config.from_pyfile('application.cfg', silent=True)\n\nここでは`instance/application.cfg`を参照しています。\\\n `silent=True`により、ファイルが見つからなかった場合のエラーを抑制しています。\n\nとはいえ、これだけでバージョン管理から除外できるわけではないので\\\n **インスタンスフォルダのパスを**`.gitignore`**に記載するのを忘れてはいけません。**\n\n[](#%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9)ベストプラクティス\n--------------------------------------------------------------------------------------------------------\n\n公式ページに[ベストプラクティス](http://flask.pocoo.org/docs/0.11/config/#configuration-best-practices)の項がありますが\\\n 内容は短く、あまり具体的な記載はされていません。\\\n （英語力の問題により、「テストしやすい方が良い」くらいしか読み取れず…）\n\n一方で、[こちら](http://damyanon.net/flask-series-configuration/)の記事では以下のように記載されています。\n\n> Good practice is to have a default configuration, which is under source control and to override it with sensitive and specific information kept in instance folders. For the default configuration you could use object-based configuration hierarchy(described in Object-based configuration section) and to manage which configuration object to load via environment variables:\n\n-   デフォルトの設定ファイルはバージョン管理下に置く\n-   デフォルトの設定はオブジェクトとして書き、環境変数を利用して読み込む\n-   センシティブな設定はインスタンスフォルダ内の設定で上書きする\n\n最後の項目は`development`や`production`などを切り替えるためですね。\\\n オブジェクトとして記載することにより、テストもしやすくなるはずです。\n\n具体例としては以下のように記載されています。\n\nベストプラクティス（非公式）\n\n    # 基本的な設定はバージョン管理下のconfig.pyにオブジェクトとして記載\n    config = {\n        \"development\": \"bookshelf.config.DevelopmentConfig\",\n        \"testing\": \"bookshelf.config.TestingConfig\",\n        \"default\": \"bookshelf.config.DevelopmentConfig\"\n    }\n\n    def configure_app(app):\n        # 環境変数を利用して読み込む設定ファイルを決定\n        config_name = os.getenv('FLASK_CONFIGURATION', 'default')\n\n        # 設定はオブジェクトとして読み込む\n        app.config.from_object(config[config_name])\n\n        # センシティブな設定はインスタンスフォルダ内の設定で上書きする\n        app.config.from_pyfile('config.cfg', silent=True)\n\n[](#%E3%81%BE%E3%81%A8%E3%82%81)まとめ\n--------------------------------------\n\n上記の設定をすべてに適用してると大変だと思うので\n\n-   Hello World!をやる程度なら`app.config`にベタ書きで指定\n-   個人で作るような小さめのアプリケーションなら`config`ファイルで設定\n-   複数の環境を用意するレベルならベストプラクティスに従う\n\nというくらいの認識を持ちました。\n\n長々書いてしまいましたが、結局は自分自身が納得できるかどうかですよね。\\\n 構成が汚くても、秘密のファイルが流出しなければとりあえずは問題なし。\n\nアプリケーションの拡張に合わせて、より良いかたちを見つけられればと思います。\n\n\n",
    "summary-list": [
      "環境ごとの分割や内容の隠蔽をどうすればうまくいくかの検討をしていました。",
      "Flaskの設定ファイルで押さえておいたほうが良さそうな部分をまとめます。",
      "一方で、[こちら](http://damyanon.net/flask-series-configuration/)の記事では以下のように記載されています。"
    ],
    "title": "Flaskにおける設定ファイルのベストプラクティス - Qiita",
    "url": "http://qiita.com/nanakenashi/items/e272ff1aafb3889230bc"
  }
  